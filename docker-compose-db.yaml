services:

  # PostgresSQL
  postgres-db:
    container_name: bookstore-db_postgres
    image: postgres:12-alpine
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - bookstore-network

  # MongoDB
  mongo-db:
    container_name: bookstore-db_mongo
    image: mongo:5.0
    restart: always
    env_file: .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - ${MONGO_PORT}:27017
    volumes:
      - ./database/shop.js:/docker-entrypoint-initdb.d/shop.js:ro
    networks:
      - bookstore-network

  # Adminer
  adminer-postgres-db:
    container_name: bookstore-db_adminer-postgres-db
    image: adminer
    restart: always
    env_file: .env.prod
    ports:
      - 8080:8080
    depends_on:
      - postgres-db
    networks:
      - bookstore-network

  # Mongo Express para conectarse a la base de datos
  mongo-express-db:
    container_name: bookstore-db_mongo-express-db
    image: mongo-express
    restart: always
    env_file: .env.prod
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DATABASE_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DATABASE_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo-db
    depends_on:
      - mongo-db
    networks:
      - bookstore-network

# Networks
networks:
  bookstore-network:
    driver: bridge